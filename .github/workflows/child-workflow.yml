name: "child-name"

on:
  workflow_call:
    inputs:
      config-path:
        required: false
        type: string
      version:
        required: false
        type: string
      description:
        required: false
        type: string
      child-item-id:
        required: false
        type: string
      auth:
        required: false
        type: string
      check-a-env:
        required: false
        type: string
      check-b-env:
        required: false
        type: string
      check-c-env:
        required: false
        type: string
      check-d-env:
        required: false
        type: string
      proxy:
        required: false
        type: string

    secrets:
      token:
        required: false

  
env:
  JOB_CACHE_PATH: /tmp/node-cache-${{ github.ref_name }}
  COMMIT_SHA: ${{ github.sha }}
  CACHE_KEY: ${{ github.workspace }}-${{ github.ref_name }}-${{ github.sha }}-${{ github.run_id }}
  RESTORE_KEY: ${{ github.workspace }}-${{ github.ref_name }}-${{ github.sha }}
  PROXY_HOST: "pluto"

jobs:
  reusable_workflow_job:
    runs-on: ubuntu-latest
    name: child-${{ inputs.version }}
    steps:
      - name: check env is empty
        run: |
          if [[ -z "${{ inputs.check-a-env }}" ]]; then
            echo "check env a is false"
          elif [[ -n "${{ inputs.check-a-env }}" ]]; then
            echo "check env a is true"
          fi
          if [[ -z "${{ inputs.check-c-env }}" ]]; then
            echo "check env c is false"
          elif [[ -n "${{ inputs.check-c-env }}" ]]; then
            echo "check env c is true"
          fi

      - name: some stuff
        run: |
          echo "description -> ${{ inputs.description }};"
          echo "child item id -> ${{ inputs.child-item-id }};"
          echo "check env a -> ${{ inputs.check-a-env }};"
          echo "check env b -> ${{ inputs.check-b-env }};"
          echo "check env c -> ${{ inputs.check-c-env }};"
          echo "check env d -> ${{ inputs.check-d-env }};"
          echo "proxy -> ${{ inputs.proxy }};"
          echo "config path -> ${{ inputs.config-path }};"
          echo "version -> ${{ inputs.version }};"
      - run: echo PROXY_HOST -> ${{ env.PROXY_HOST }}